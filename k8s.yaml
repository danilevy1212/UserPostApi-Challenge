# Config Map
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
data:
  CHALLENGE_SERVER_PORT: "3000"
  CHALLENGE_SERVER_IS_PRODUCTION: "true"
  CHALLENGE_DATABASE_HOST: "db-service"
  CHALLENGE_DATABASE_NAME: "challenge"
---
# API Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name: api
        image: challenge-api:latest
        imagePullPolicy: Never  # Local image in Minikube
        ports:
        - containerPort: 3000
        env:
        - name: CHALLENGE_SERVER_PORT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: CHALLENGE_SERVER_PORT
        - name: CHALLENGE_SERVER_IS_PRODUCTION
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: CHALLENGE_SERVER_IS_PRODUCTION
        - name: CHALLENGE_DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: CHALLENGE_DATABASE_HOST
        - name: CHALLENGE_DATABASE_NAME
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: CHALLENGE_DATABASE_NAME
        - name: CHALLENGE_DATABASE_USERNAME
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: CHALLENGE_DATABASE_USERNAME
        - name: CHALLENGE_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: CHALLENGE_DATABASE_PASSWORD
---
# API Service (exposed externally)
apiVersion: v1
kind: Service
metadata:
  name: api-service
spec:
  selector:
    app: api
  ports:
  - protocol: TCP
    port: 3000
    targetPort: 3000
  type: LoadBalancer
---
# Database Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
      - name: postgres
        image: postgres:17.4
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: CHALLENGE_DATABASE_USERNAME
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: CHALLENGE_DATABASE_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: CHALLENGE_DATABASE_NAME
        volumeMounts:
        - name: db-data
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: db-data
        persistentVolumeClaim:
          claimName: db-pvc
---
# PersistentVolumeClaim for database storage
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: db-pvc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Database Service (internal only)
apiVersion: v1
kind: Service
metadata:
  name: db-service
spec:
  selector:
    app: db
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432
